<?php

namespace Ovinz\DevisBundle\Entity;

use Gedmo\Mapping\Annotation as Gedmo;
use Doctrine\ORM\Mapping as ORM;

/**
 * Form
 *
 * @ORM\Table(name="form")
 * @ORM\Entity(repositoryClass="Ovinz\DevisBundle\Entity\Repository\FormRepository")
 */
class Form
{

	/**
    * @var ArrayCollection
    *
    * @ORM\ManyToMany(targetEntity="Ovinz\DevisBundle\Entity\Category",cascade={"persist"}, inversedBy="forms")
    */
	protected $categories;

    /**
     * @var ArrayCollection
     *
     * @ORM\ManyToMany(targetEntity="Ovinz\DevisBundle\Entity\Section",cascade={"persist"}, inversedBy="forms")
     */
    protected $sections;

    /**
     * @var ArrayCollection
     *
     * @ORM\ManyToMany(targetEntity="Ovinz\DevisBundle\Entity\Job",cascade={"persist"}, inversedBy="forms")
     */
    protected $jobs;

    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var integer
     *
     * @ORM\Column(name="quotatis_form_id", type="integer")
     */
    protected $quotatisFormId;

    /**
     * @var json_array
     *
     * @ORM\Column(name="questions", type="json_array")
     */
    protected $questions;

    /**
     * @var boolean
     *
     * @ORM\Column(name="active", type="boolean")
     */
    protected $active = 0;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    protected $name;
	
	/**
     * @Gedmo\Slug(fields={"name"})
     * @ORM\Column(name="slug", length=128, unique=true)
     */
    protected $slug;

    /**
     * @var string
     *
     * @ORM\Column(name="lastHash", type="string", length=32)
     */
    protected $lastHash;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="updated_at", type="datetime")
     */
    protected $updatedAt;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    protected $createdAt;


    /**
     * @var boolean
     */
    protected $isNew = false;

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Form
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Get slug
     *
     * @return string
     */
    public function getSlug()
    {
        return $this->slug;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Form
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return Form
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->categories = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add categories
     *
     * @param \Ovinz\DevisBundle\Entity\Category $categories
     * @return Form
     */
    public function addCategory(\Ovinz\DevisBundle\Entity\Category $categories)
    {
        $this->categories[] = $categories;

        return $this;
    }

    /**
     * Remove categories
     *
     * @param \Ovinz\DevisBundle\Entity\Category $categories
     */
    public function removeCategory(\Ovinz\DevisBundle\Entity\Category $categories)
    {
        $this->categories->removeElement($categories);
    }

    /**
     * Get categories
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCategories()
    {
        return $this->categories;
    }
    

    /**
     * Set active
     *
     * @param boolean $active
     * @return Form
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set lastHash
     *
     * @param string $data
     *
     * @return Form
     */
    public function setLastHash($data)
    {
        $this->lastHash = $data;

        return $this;
    }

    /**
     * Get LastHash
     *
     * @return string
     */
    public function getLastHash()
    {
        return $this->lastHash;
    }

    /**
     * Set isNew
     *
     * @param mixed $isNew
     *
     * @return Form
     */
    public function setIsNew($isNew)
    {
        $this->isNew = $isNew;

        return $this;
    }

    /**
     * Get IsNew
     *
     * @return mixed
     */
    public function getIsNew()
    {
        return $this->isNew;
    }

    /**
     * Set slug
     *
     * @param string $slug
     * @return Form
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;

        return $this;
    }

    /**
     * Set quotatisFormId
     *
     * @param integer $quotatisFormId
     * @return Form
     */
    public function setQuotatisFormId($quotatisFormId)
    {
        $this->quotatisFormId = $quotatisFormId;

        return $this;
    }

    /**
     * Get quotatisFormId
     *
     * @return integer 
     */
    public function getQuotatisFormId()
    {
        return $this->quotatisFormId;
    }

    /**
     * Set questions
     *
     * @param array $questions
     * @return Form
     */
    public function setQuestions($questions)
    {
        $this->questions = $questions;

        return $this;
    }

    /**
     * Get questions
     *
     * @return array 
     */
    public function getQuestions()
    {
        return $this->questions;
    }
}
