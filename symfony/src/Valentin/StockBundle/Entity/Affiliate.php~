<?php

namespace Ovinz\DevisBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Affiliate
 *
 * @ORM\Table(name="affiliate")
 * @ORM\Entity(repositoryClass="Ovinz\DevisBundle\Entity\Repository\AffiliateRepository")
 */
class Affiliate
{
	/**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    protected $name;

    /**
     * @var json_array
     *
     * @ORM\Column(name="conf", type="json_array")
     */
    protected $conf;

    /**
     * @var string
     *
     * @ORM\Column(name="domain", type="string", length=255)
     */
    protected $domain;

    /**
     * @var string
     *
     * @ORM\Column(name="path", type="string", length=255)
     */
    protected $path;

    /**
     * @var ArrayCollection
     *
     * @ORM\ManyToMany(targetEntity="Ovinz\DevisBundle\Entity\Category",cascade={"persist"}, inversedBy="affiliates")
     */
    protected $categories;

    /**
     * @ORM\OneToMany(targetEntity="Content", cascade={"persist"}, mappedBy="affiliate")
     */
    protected $contents;

    /**
     * Get Path
     *
     * @return string
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Set path
     *
     * @param string $path
     *
     * @return Affiliate
     */
    public function setPath($path)
    {
        $this->path = $path;

        return $this;
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Affiliate
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set conf
     *
     * @param array $conf
     * @return Affiliate
     */
    public function setConf($conf)
    {
        $this->conf = $conf;

        return $this;
    }

    /**
     * Get conf
     *
     * @return array
     */
    public function getConf()
    {
        return $this->conf;
    }

    /**
     * Set domain
     *
     * @param string $domain
     * @return Affiliate
     */
    public function setDomain($domain)
    {
        $this->domain = $domain;

        return $this;
    }

    /**
     * Get domain
     *
     * @return string
     */
    public function getDomain()
    {
        return $this->domain;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->categories = new \Doctrine\Common\Collections\ArrayCollection();
        $this->contents = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add categories
     *
     * @param \Ovinz\DevisBundle\Entity\Category $categories
     * @return Affiliate
     */
    public function addCategory(\Ovinz\DevisBundle\Entity\Category $categories)
    {
        $this->categories[] = $categories;

        return $this;
    }

    /**
     * Remove categories
     *
     * @param \Ovinz\DevisBundle\Entity\Category $categories
     */
    public function removeCategory(\Ovinz\DevisBundle\Entity\Category $categories)
    {
        $this->categories->removeElement($categories);
    }

    /**
     * Get categories
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getCategories()
    {
        return $this->categories;
    }

    /**
     * Add contents
     *
     * @param \Ovinz\DevisBundle\Entity\Content $contents
     * @return Affiliate
     */
    public function addContent(\Ovinz\DevisBundle\Entity\Content $contents)
    {
        $this->contents[] = $contents;

        return $this;
    }

    /**
     * Remove contents
     *
     * @param \Ovinz\DevisBundle\Entity\Content $contents
     */
    public function removeContent(\Ovinz\DevisBundle\Entity\Content $contents)
    {
        $this->contents->removeElement($contents);
    }

    /**
     * Get contents
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getContents()
    {
        return $this->contents;
    }
}
